{"version":3,"sources":["../node_modules/codemirror/mode/gas/gas.js"],"names":["CodeMirror","defineMode","_config","parserConfig","custom","lineCommentStartSymbol","directives",".abort",".align",".altmacro",".ascii",".asciz",".balign",".balignw",".balignl",".bundle_align_mode",".bundle_lock",".bundle_unlock",".byte",".cfi_startproc",".comm",".data",".def",".desc",".dim",".double",".eject",".else",".elseif",".end",".endef",".endfunc",".endif",".equ",".equiv",".eqv",".err",".error",".exitm",".extern",".fail",".file",".fill",".float",".func",".global",".gnu_attribute",".hidden",".hword",".ident",".if",".incbin",".include",".int",".internal",".irp",".irpc",".lcomm",".lflags",".line",".linkonce",".list",".ln",".loc",".loc_mark_labels",".local",".long",".macro",".mri",".noaltmacro",".nolist",".octa",".offset",".org",".p2align",".popsection",".previous",".print",".protected",".psize",".purgem",".pushsection",".quad",".reloc",".rept",".sbttl",".scl",".section",".set",".short",".single",".size",".skip",".sleb128",".space",".stab",".string",".struct",".subsection",".symver",".tag",".text",".title",".type",".uleb128",".val",".version",".vtable_entry",".vtable_inherit",".warning",".weak",".weakref",".word","registers","arch","architecture","toLowerCase","clikeComment","stream","state","ch","maybeEnd","next","tokenize","al","ah","ax","eax","rax","bl","bh","bx","ebx","rbx","cl","cx","ecx","rcx","dl","dh","dx","edx","rdx","si","esi","rsi","di","edi","rdi","sp","esp","rsp","bp","ebp","rbp","ip","eip","rip","cs","ds","ss","es","fs","gs","syntax","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","lr","pc","r13","r14","r15","push","eatWhile","startState","token","eatSpace","style","cur","eat","skipToEnd","end","escaped","nextUntilUnescaped","current","test","i","length","lineComment","blockCommentStart","blockCommentEnd","mod","__webpack_require__"],"mappings":"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","file":"static/js/54.9b0af2a9.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"gas\", function (_config, parserConfig) {\n    'use strict'; // If an architecture is specified, its initialization function may\n    // populate this array with custom parsing functions which will be\n    // tried in the event that the standard functions do not find a match.\n\n    var custom = []; // The symbol used to start a line comment changes based on the target\n    // architecture.\n    // If no architecture is pased in \"parserConfig\" then only multiline\n    // comments will have syntax support.\n\n    var lineCommentStartSymbol = \"\"; // These directives are architecture independent.\n    // Machine specific directives should go in their respective\n    // architecture initialization function.\n    // Reference:\n    // http://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops\n\n    var directives = {\n      \".abort\": \"builtin\",\n      \".align\": \"builtin\",\n      \".altmacro\": \"builtin\",\n      \".ascii\": \"builtin\",\n      \".asciz\": \"builtin\",\n      \".balign\": \"builtin\",\n      \".balignw\": \"builtin\",\n      \".balignl\": \"builtin\",\n      \".bundle_align_mode\": \"builtin\",\n      \".bundle_lock\": \"builtin\",\n      \".bundle_unlock\": \"builtin\",\n      \".byte\": \"builtin\",\n      \".cfi_startproc\": \"builtin\",\n      \".comm\": \"builtin\",\n      \".data\": \"builtin\",\n      \".def\": \"builtin\",\n      \".desc\": \"builtin\",\n      \".dim\": \"builtin\",\n      \".double\": \"builtin\",\n      \".eject\": \"builtin\",\n      \".else\": \"builtin\",\n      \".elseif\": \"builtin\",\n      \".end\": \"builtin\",\n      \".endef\": \"builtin\",\n      \".endfunc\": \"builtin\",\n      \".endif\": \"builtin\",\n      \".equ\": \"builtin\",\n      \".equiv\": \"builtin\",\n      \".eqv\": \"builtin\",\n      \".err\": \"builtin\",\n      \".error\": \"builtin\",\n      \".exitm\": \"builtin\",\n      \".extern\": \"builtin\",\n      \".fail\": \"builtin\",\n      \".file\": \"builtin\",\n      \".fill\": \"builtin\",\n      \".float\": \"builtin\",\n      \".func\": \"builtin\",\n      \".global\": \"builtin\",\n      \".gnu_attribute\": \"builtin\",\n      \".hidden\": \"builtin\",\n      \".hword\": \"builtin\",\n      \".ident\": \"builtin\",\n      \".if\": \"builtin\",\n      \".incbin\": \"builtin\",\n      \".include\": \"builtin\",\n      \".int\": \"builtin\",\n      \".internal\": \"builtin\",\n      \".irp\": \"builtin\",\n      \".irpc\": \"builtin\",\n      \".lcomm\": \"builtin\",\n      \".lflags\": \"builtin\",\n      \".line\": \"builtin\",\n      \".linkonce\": \"builtin\",\n      \".list\": \"builtin\",\n      \".ln\": \"builtin\",\n      \".loc\": \"builtin\",\n      \".loc_mark_labels\": \"builtin\",\n      \".local\": \"builtin\",\n      \".long\": \"builtin\",\n      \".macro\": \"builtin\",\n      \".mri\": \"builtin\",\n      \".noaltmacro\": \"builtin\",\n      \".nolist\": \"builtin\",\n      \".octa\": \"builtin\",\n      \".offset\": \"builtin\",\n      \".org\": \"builtin\",\n      \".p2align\": \"builtin\",\n      \".popsection\": \"builtin\",\n      \".previous\": \"builtin\",\n      \".print\": \"builtin\",\n      \".protected\": \"builtin\",\n      \".psize\": \"builtin\",\n      \".purgem\": \"builtin\",\n      \".pushsection\": \"builtin\",\n      \".quad\": \"builtin\",\n      \".reloc\": \"builtin\",\n      \".rept\": \"builtin\",\n      \".sbttl\": \"builtin\",\n      \".scl\": \"builtin\",\n      \".section\": \"builtin\",\n      \".set\": \"builtin\",\n      \".short\": \"builtin\",\n      \".single\": \"builtin\",\n      \".size\": \"builtin\",\n      \".skip\": \"builtin\",\n      \".sleb128\": \"builtin\",\n      \".space\": \"builtin\",\n      \".stab\": \"builtin\",\n      \".string\": \"builtin\",\n      \".struct\": \"builtin\",\n      \".subsection\": \"builtin\",\n      \".symver\": \"builtin\",\n      \".tag\": \"builtin\",\n      \".text\": \"builtin\",\n      \".title\": \"builtin\",\n      \".type\": \"builtin\",\n      \".uleb128\": \"builtin\",\n      \".val\": \"builtin\",\n      \".version\": \"builtin\",\n      \".vtable_entry\": \"builtin\",\n      \".vtable_inherit\": \"builtin\",\n      \".warning\": \"builtin\",\n      \".weak\": \"builtin\",\n      \".weakref\": \"builtin\",\n      \".word\": \"builtin\"\n    };\n    var registers = {};\n\n    function x86(_parserConfig) {\n      lineCommentStartSymbol = \"#\";\n      registers.al = \"variable\";\n      registers.ah = \"variable\";\n      registers.ax = \"variable\";\n      registers.eax = \"variable-2\";\n      registers.rax = \"variable-3\";\n      registers.bl = \"variable\";\n      registers.bh = \"variable\";\n      registers.bx = \"variable\";\n      registers.ebx = \"variable-2\";\n      registers.rbx = \"variable-3\";\n      registers.cl = \"variable\";\n      registers.ch = \"variable\";\n      registers.cx = \"variable\";\n      registers.ecx = \"variable-2\";\n      registers.rcx = \"variable-3\";\n      registers.dl = \"variable\";\n      registers.dh = \"variable\";\n      registers.dx = \"variable\";\n      registers.edx = \"variable-2\";\n      registers.rdx = \"variable-3\";\n      registers.si = \"variable\";\n      registers.esi = \"variable-2\";\n      registers.rsi = \"variable-3\";\n      registers.di = \"variable\";\n      registers.edi = \"variable-2\";\n      registers.rdi = \"variable-3\";\n      registers.sp = \"variable\";\n      registers.esp = \"variable-2\";\n      registers.rsp = \"variable-3\";\n      registers.bp = \"variable\";\n      registers.ebp = \"variable-2\";\n      registers.rbp = \"variable-3\";\n      registers.ip = \"variable\";\n      registers.eip = \"variable-2\";\n      registers.rip = \"variable-3\";\n      registers.cs = \"keyword\";\n      registers.ds = \"keyword\";\n      registers.ss = \"keyword\";\n      registers.es = \"keyword\";\n      registers.fs = \"keyword\";\n      registers.gs = \"keyword\";\n    }\n\n    function armv6(_parserConfig) {\n      // Reference:\n      // http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001l/QRC0001_UAL.pdf\n      // http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf\n      lineCommentStartSymbol = \"@\";\n      directives.syntax = \"builtin\";\n      registers.r0 = \"variable\";\n      registers.r1 = \"variable\";\n      registers.r2 = \"variable\";\n      registers.r3 = \"variable\";\n      registers.r4 = \"variable\";\n      registers.r5 = \"variable\";\n      registers.r6 = \"variable\";\n      registers.r7 = \"variable\";\n      registers.r8 = \"variable\";\n      registers.r9 = \"variable\";\n      registers.r10 = \"variable\";\n      registers.r11 = \"variable\";\n      registers.r12 = \"variable\";\n      registers.sp = \"variable-2\";\n      registers.lr = \"variable-2\";\n      registers.pc = \"variable-2\";\n      registers.r13 = registers.sp;\n      registers.r14 = registers.lr;\n      registers.r15 = registers.pc;\n      custom.push(function (ch, stream) {\n        if (ch === '#') {\n          stream.eatWhile(/\\w/);\n          return \"number\";\n        }\n      });\n    }\n\n    var arch = (parserConfig.architecture || \"x86\").toLowerCase();\n\n    if (arch === \"x86\") {\n      x86(parserConfig);\n    } else if (arch === \"arm\" || arch === \"armv6\") {\n      armv6(parserConfig);\n    }\n\n    function nextUntilUnescaped(stream, end) {\n      var escaped = false,\n          next;\n\n      while ((next = stream.next()) != null) {\n        if (next === end && !escaped) {\n          return false;\n        }\n\n        escaped = !escaped && next === \"\\\\\";\n      }\n\n      return escaped;\n    }\n\n    function clikeComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while ((ch = stream.next()) != null) {\n        if (ch === \"/\" && maybeEnd) {\n          state.tokenize = null;\n          break;\n        }\n\n        maybeEnd = ch === \"*\";\n      }\n\n      return \"comment\";\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: null\n        };\n      },\n      token: function token(stream, state) {\n        if (state.tokenize) {\n          return state.tokenize(stream, state);\n        }\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n\n        var style,\n            cur,\n            ch = stream.next();\n\n        if (ch === \"/\") {\n          if (stream.eat(\"*\")) {\n            state.tokenize = clikeComment;\n            return clikeComment(stream, state);\n          }\n        }\n\n        if (ch === lineCommentStartSymbol) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        if (ch === '\"') {\n          nextUntilUnescaped(stream, '\"');\n          return \"string\";\n        }\n\n        if (ch === '.') {\n          stream.eatWhile(/\\w/);\n          cur = stream.current().toLowerCase();\n          style = directives[cur];\n          return style || null;\n        }\n\n        if (ch === '=') {\n          stream.eatWhile(/\\w/);\n          return \"tag\";\n        }\n\n        if (ch === '{') {\n          return \"bracket\";\n        }\n\n        if (ch === '}') {\n          return \"bracket\";\n        }\n\n        if (/\\d/.test(ch)) {\n          if (ch === \"0\" && stream.eat(\"x\")) {\n            stream.eatWhile(/[0-9a-fA-F]/);\n            return \"number\";\n          }\n\n          stream.eatWhile(/\\d/);\n          return \"number\";\n        }\n\n        if (/\\w/.test(ch)) {\n          stream.eatWhile(/\\w/);\n\n          if (stream.eat(\":\")) {\n            return 'tag';\n          }\n\n          cur = stream.current().toLowerCase();\n          style = registers[cur];\n          return style || null;\n        }\n\n        for (var i = 0; i < custom.length; i++) {\n          style = custom[i](ch, stream, state);\n\n          if (style) {\n            return style;\n          }\n        }\n      },\n      lineComment: lineCommentStartSymbol,\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\"\n    };\n  });\n});"],"sourceRoot":""}